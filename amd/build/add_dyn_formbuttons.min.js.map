{"version":3,"file":"add_dyn_formbuttons.min.js","sources":["../src/add_dyn_formbuttons.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n\n/**\n * @author     Andreas Grabs <moodle@grabs-edv.de>\n * @copyright  2024 Andreas Grabs\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport ContentLoader from 'mod_unilabel/contentloader';\nimport Templates from 'core/templates';\nimport notification from 'core/notification';\nimport log from 'core/log';\n\nlet _formid;\nlet _type;\nlet _elements;\n\n/**\n * Register the del button and get the html from mustache.\n *\n * @param {Element} headerelement The draggable header element\n * @param {Boolean} useVisibility Show visible button or not.\n * @param {Integer} index The index of the headerelement\n * @returns {Promise}\n */\nconst registerActionButtons = (headerelement, useVisibility, index) => {\n    const context = {\n        type: _type,\n        repeatindex: index,\n        repeatnr: (index + 1),\n    };\n    return Templates.renderForPromise('mod_unilabel/element_action_buttons', context)\n    .then(({html, js}) => {\n        headerelement.querySelector('div.d-flex').insertAdjacentHTML(\n            'beforeend', html\n        );\n        if (useVisibility) {\n            initVisibleButton(headerelement, index);\n        }\n        Templates.runTemplateJS(js);\n        return;\n    }).catch((error) => notification.exception(error));\n};\n\n/**\n * Initilize the visible button.\n *\n * @param {Element} headerelement The collapseble form section header\n * @param {Integer} index The repeatindex of the element\n */\nconst initVisibleButton = (headerelement, index) => {\n    headerelement.classList.add('has-visibility');\n    var visibleElement = document.getElementsByName('unilabeltype_' + _type + '_visible[' + index + ']')[0];\n    if (!visibleElement) {\n        return;\n    }\n    var visibleButton = headerelement.querySelector('a.visible-button i');\n    if (!visibleButton) {\n        return;\n    }\n    setVisibilityStyle(visibleButton, visibleElement.value == '1');\n};\n\n/**\n * Set the icon of the visible button\n *\n * @param {Element} visibleButton The visible button element\n * @param {Boolean} enabled Show as enabled or disabled\n */\nconst setVisibilityStyle = (visibleButton, enabled) => {\n    if (enabled) {\n        visibleButton.classList.remove('fa-eye-slash');\n        visibleButton.classList.add('fa-eye');\n        visibleButton.closest('fieldset').classList.remove('visible-off');\n    } else {\n        visibleButton.classList.remove('fa-eye');\n        visibleButton.classList.add('fa-eye-slash');\n        visibleButton.closest('fieldset').classList.add('visible-off');\n    }\n};\n\n/**\n * Switch the visiblity of the repeat elment with the given index.\n *\n * @param {Integer} index The repeatindex of the element we want to switch.\n */\nconst switchElementVisible = (index) => {\n    log.debug('Set element visible/visible-off: ' + index);\n\n    // Get the hidden input for the visiblity state.\n    var visibleElement = document.getElementsByName('unilabeltype_' + _type + '_visible[' + index + ']')[0];\n    if (!visibleElement) {\n        return;\n    }\n    // Switch the visibility state.\n    visibleElement.value = visibleElement.value == '1' ? '0' : '1';\n\n    // Now we have to change the icon of the visible button.\n    var visibleButton = document.querySelector('#id_singleelementheader_' + index + ' a.visible-button i');\n    if (!visibleButton) {\n        return;\n    }\n    setVisibilityStyle(visibleButton, visibleElement.value == '1');\n};\n\n/**\n * Delete an element and set dummy hidden elements with \"0\" value, what is needed by the mform.\n *\n * @param {Integer} index The index of the deleted element\n */\nconst delElement = (index) => {\n    var headerelement = document.querySelector('#id_singleelementheader_' + index);\n    if (headerelement) {\n        headerelement.remove();\n    }\n    var thisform = document.querySelector('#' + _formid);\n    var myparent = document.querySelector('#id_unilabelcontenthdr');\n    if (myparent) {\n        var newelement;\n        _elements.forEach((element) => {\n            let name = 'unilabeltype_' + _type + '_' + element + '[' + index + ']';\n            log.debug('Set dummy element ' + name);\n            newelement = document.createElement('input');\n            newelement.type = 'hidden';\n            newelement.name = name;\n            newelement.value = '';\n            myparent.insertAdjacentElement('afterbegin', newelement);\n        });\n        const myevent = new CustomEvent('itemremoved', {detail: index});\n        thisform.dispatchEvent(myevent);\n    }\n};\n\n/**\n * Export our init method.\n *\n * @param {string} type The type of unilabeltype e.g.: grid\n * @param {string} formid The id of the mform the draggable elements are related to\n * @param {Integer} contextid\n * @param {string} prefix\n * @param {array} elements The dummy fields we need if we want to delete an element\n * @param {boolean} useDragdrop The same as element but for editor which has subelements like \"text\", \"format\" and \"itemid\"\n * @param {boolean} useVisibility Should we show the visible button?\n */\nexport const init = async(type, formid, contextid, prefix, elements, useDragdrop, useVisibility) => {\n    // Import the dragdrop module asynchron.\n    const dragDrop = await import('mod_unilabel/dragdrop');\n    dragDrop.init(type, formid, useDragdrop);\n\n    _type = type;\n    _formid = formid;\n    _elements = elements;\n\n    // Register a click for the whole form but only applying to the delButtons.\n    var thisform = document.querySelector('#' + formid);\n    thisform.addEventListener('click', (e) => {\n        var index;\n        if (e.target.dataset.action == 'shoulddelete') {\n            e.preventDefault();\n        }\n        if (e.target.dataset.action == 'deleteelement') {\n            index = e.target.dataset.id;\n            log.debug('Deleting element: ' + index);\n            delElement(index);\n        }\n        if (e.target.dataset.action == 'setvisible') {\n            e.preventDefault();\n            index = e.target.dataset.id;\n            switchElementVisible(index);\n            // To make the moodle form aware of the change, we set the data-initial-value to its original value.\n            log.debug('GRABS:');\n            log.debug(e);\n            e.target.closest('form').dataset.formDirty = true;\n        }\n    });\n\n    // Look for the header elements and add and register a delete button.\n    var headerelements = document.querySelectorAll('fieldset[id^=\"id_singleelementheader\"]');\n    for (var i = 0; i < headerelements.length; i++) {\n        var headerelement = headerelements[i];\n        log.debug('looking for: ' + headerelement.id);\n        registerActionButtons(headerelement, useVisibility, i);\n    }\n\n    var button = document.querySelector('#button-' + formid);\n    if (button) {\n        var repeatbutton = document.querySelector('#fitem_id_' + prefix + 'add_more_elements_btn');\n        if (repeatbutton) {\n            repeatbutton.remove();\n        }\n        button.addEventListener('click', (e) => {\n            var contentcontainerselector = '#addcontent-' + formid;\n            var repeatindex = parseInt(e.target.form.multiple_chosen_elements_count.value);\n            var fragmentcall = 'get_edit_element';\n\n            var serviceparams = {\n                'contextid': contextid,\n                'formid': formid,\n                'repeatindex': repeatindex\n            };\n            log.debug(serviceparams);\n\n            e.target.form.multiple_chosen_elements_count.value = repeatindex + 1;\n\n            // To make the moodle form aware of the change, we set the data-initial-value to its original value.\n            e.target.form.dataset.formDirty = true;\n\n            var contentLoader = new ContentLoader(contentcontainerselector, fragmentcall, serviceparams, contextid);\n            contentLoader.loadContent('beforebegin').then(() => {\n                if (useVisibility) {\n                    var headerelement = document.querySelector('#id_singleelementheader_' + repeatindex);\n                    initVisibleButton(headerelement, repeatindex);\n                }\n                const myevent = new CustomEvent('itemadded', {detail: repeatindex});\n                thisform.dispatchEvent(myevent);\n                return true;\n            }).catch((error) => notification.exception(error));\n        });\n    }\n};\n"],"names":["_formid","_type","_elements","registerActionButtons","headerelement","useVisibility","index","context","type","repeatindex","repeatnr","Templates","renderForPromise","then","_ref","html","js","querySelector","insertAdjacentHTML","initVisibleButton","runTemplateJS","catch","error","notification","exception","classList","add","visibleElement","document","getElementsByName","visibleButton","setVisibilityStyle","value","enabled","remove","closest","async","formid","contextid","prefix","elements","useDragdrop","init","thisform","addEventListener","e","target","dataset","action","preventDefault","id","debug","myparent","newelement","forEach","element","name","createElement","insertAdjacentElement","myevent","CustomEvent","detail","dispatchEvent","delElement","switchElementVisible","formDirty","headerelements","querySelectorAll","i","length","button","repeatbutton","contentcontainerselector","parseInt","form","multiple_chosen_elements_count","serviceparams","ContentLoader","loadContent"],"mappings":"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"}